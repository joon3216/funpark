% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pgf.R
\name{csum_N}
\alias{csum_N}
\title{csum_N}
\usage{
csum_N(pmf, support, lambda, eps = 1e-05)
}
\arguments{
\item{pmf}{A probability mass function of X_i which takes elements of
an ambient space of pmf's support (i.e. an input that makes pmf return
a probability) in its first argument. This pmf must have a finite
\code{support}, and be able to take an array of elements and return
an array of probabilities. Each output of this \code{pmf} must fall in
[0, 1], and every conceivable output, including 0, must sum up to 1,
i.e. if an object that is not an element of \code{support} is given,
\code{pmf} must return 0.}

\item{support}{An integer vector from 0 to the largest element of the
pmf's support. \code{support} (of X_i) consists of nonnegative integers.}

\item{lambda}{A number > 0.}

\item{eps}{A number in (0, 1); \code{1e-05} by default}
}
\description{
Using the Discrete Fourier Transform, return the approximate pmf vector
of S = sum of iid X_i's, i = 1, ..., N, where N ~ Pois(lambda) and
N is independent of all X_i's.
}
\examples{
# Example 1: S_Y = sum of iid Y_i's, Y_i ~ dY
dY <- function(y) {
    sapply(
        y,
        function(d) {
            if (d \%in\% c(1, 4)) {
                .25
            } else if (d == 2) {
                .5
            } else {
                0
            }
        }
    )
}
result_Y <- csum_N(dY, support = 0:4, lambda = 3)
# Example 2: S = sum of iid X_i's, X_i ~ dX
dX <- function(x) {
    sapply(
        x,
        function(d) {
            if (d == 0) {
                .05
            } else if (d \%in\% c(1, 3, 4)) {
                .1
            } else if (d == 2) {
                .075
            } else if (d == 5) {
                .575
            } else {
                0
            }
        }
    )
}
result_X <- csum_N(dX, support = 0:5, lambda = 3)
}
\seealso{
\code{\link{dpmf}}
  \code{\link{rpmf}}
}
\author{
Junkyu Park
}
